<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="JokeMapper">


	<insert id="create" parameterType="kr.co.dadrip.domain.JokeDTO">
		INSERT INTO joke (joke_id, member_id, joke_question, joke_answer)
		VALUES (joke_seq.nextval, #{member_id}, #{joke_question}, #{joke_answer})
		<selectKey keyProperty="joke_id" resultType="Integer" order="AFTER">
			SELECT joke_seq.currval
			FROM dual
		</selectKey>
	</insert>

	<select id="read" resultType="kr.co.dadrip.domain.JokeDTO">
		SELECT joke_id,
			   member_id,
			   created_on,
			   modified_on,
			   joke_question,
			   joke_answer,
			   view_count,
			   reply_count,
			   like_count,
			   dislike_count
		FROM joke
		WHERE joke_id = #{joke_id}
	</select>

	<!-- 오늘, 이번주, 이번달, 전체 베스트 글을 조회하는 동적 쿼리문 -->

	<sql id="bestJokesCriteria">
		<choose>
			<when test="timeScope == 'day'">
				AND voted_on >= SYSDATE - 1
			</when>
			<when test="timeScope == 'week'">
				AND voted_on >= SYSDATE - 7
			</when>
			<when test="timeScope == 'month'">
				AND voted_on >= SYSDATE - 30
			</when>
			<otherwise>
				
			</otherwise>
		</choose>
	</sql>
	
	<sql id="bestJokesCriteriaV2">
		<choose>
			<when test="timeScope == 'day'">
				best_jokes_today IDX_BESTJOKESTODAY_BESTJOKESID_PK
			</when>
			<when test="timeScope == 'week'">
				best_jokes_week IDX_BESTJOKESWEEK_BESTJOKESID_PK
			</when>
			<when test="timeScope == 'month'">
				best_jokes_month IDX_BESTJOKESMONTH_BESTJOKESID_PK
			</when>
			<otherwise>
				best_jokes_total IDX_BESTJOKESTOTAL_BESTJOKESID_PK
			</otherwise>
		</choose>
	</sql>
	
	<sql id="bestJokesTableName">
		<choose>
			<when test="timeScope == 'day'">
				best_jokes_today
			</when>
			<when test="timeScope == 'week'">
				best_jokes_week
			</when>
			<when test="timeScope == 'month'">
				best_jokes_month
			</when>
			<otherwise>
				best_jokes_total
			</otherwise>
		</choose>
	</sql>

	<select id="listBestJokes" resultType="kr.co.dadrip.domain.JokeDTO">
		<![CDATA[
			SELECT	joke_id, 
					member_id, 
					created_on, 
					modified_on, 
					joke_question, 
					joke_answer, 
					view_count,
					reply_count,
					like_count,
					dislike_count
			FROM	(
					SELECT	rownum rn,
							joke_id, 
							member_id, 
							created_on, 
							modified_on, 
							joke_question, 
							joke_answer, 
							view_count,
							reply_count,
							like_count,
							dislike_count
					FROM	(
	                    	SELECT	j.JOKE_ID,
		                            j.MEMBER_ID,
		                            j.CREATED_ON,
		                            j.MODIFIED_ON,
		                            j.JOKE_QUESTION,
		                            j.JOKE_ANSWER,
		                            j.VIEW_COUNT,
		                            j.REPLY_COUNT,
		                            j.LIKE_COUNT,
		                            j.DISLIKE_COUNT,
		                            fv.filtered_like_count AS filtered_like_count
	                        FROM	joke j
	                        INNER JOIN (
			                            SELECT	JOKE_ID,
			                            		COUNT(*) AS like_count
			                            FROM 	vote
			                            WHERE	VOTE_TYPE = '1'
			                            GROUP BY JOKE_ID
		                            ) v ON j.JOKE_ID = v.JOKE_ID
	                        INNER JOIN (
	                                    SELECT  JOKE_ID,
	                                            COUNT(*) AS filtered_like_count
	                                    FROM    vote
	                                    WHERE   VOTE_TYPE = '1'
	                                    ]]>
	                                    <include refid="bestJokesCriteria"></include>
	                                    <![CDATA[
	                                    GROUP BY JOKE_ID
	                                ) fv ON j.JOKE_ID = fv.JOKE_ID
	                        WHERE fv.filtered_like_count > 0
	                        ORDER BY fv.filtered_like_count DESC, j.created_on DESC
	                        )
					WHERE
		]]>
			
		<include refid="searchCriteria"></include>
		
		<![CDATA[
					rownum <= #{pageNum} * #{amount}
					)
			WHERE	rn > (#{pageNum} - 1) * #{amount}
		]]>
	</select>

	<update id="update">
		UPDATE joke
		SET modified_on = sysdate, joke_question = #{joke_question}, joke_answer = #{joke_answer}
		WHERE joke_id = #{joke_id}
	</update>

	<delete id="delete">
		DELETE
		FROM joke
		WHERE joke_id = #{joke_id}
	</delete>

	<sql id="searchCriteria">
		<where>
			<foreach item="type" collection="typeArr">
				<choose>
					<when test="type == 'T'.toString()">
						joke_question LIKE '%'||#{keyword}||'%'
					</when>
					<when test="type == 'C'.toString()">
						joke_answer LIKE '%'||#{keyword}||'%'
					</when>
					<when test="type == 'W'.toString()">
						member_id LIKE '%'||#{keyword}||'%'
					</when>
				</choose>
			</foreach>
		</where>
	</sql>

	<select id="listAllJokesWithPaging" resultType="kr.co.dadrip.domain.JokeDTO">
		<!-- 부등호를 문자로 인식하도록 해주는 CDATA -->
		<![CDATA[	
			SELECT	joke_id, 
					member_id, 
					created_on, 
					modified_on, 
					joke_question, 
					joke_answer, 
					view_count,
					reply_count,
					like_count,
					dislike_count
			FROM	(
						SELECT /*+ INDEX_DESC(joke IDX_joke_jokeId_PK) */
							rownum rn,
							joke_id, 
							member_id, 
							created_on, 
							modified_on, 
							joke_question, 
							joke_answer, 
							view_count,
							reply_count,
							like_count,
							dislike_count
						FROM joke
						WHERE
		]]>

		<include refid="searchCriteria"></include>
		
		<![CDATA[
			rownum <= #{pageNum} * #{amount}
					)
			WHERE	rn > (#{pageNum}-1) * #{amount}
		]]>


	</select>
	
	
	<select id="listBestJokesV2" resultType="kr.co.dadrip.domain.JokeDTO">
		SELECT
		    joke_id, 
		    member_id, 
		    created_on, 
		    modified_on, 
		    joke_question, 
		    joke_answer, 
		    view_count,
		    reply_count,
		    like_count,
		    dislike_count
		FROM
		    (
		    SELECT /*+ INDEX(<include refid="bestJokesCriteriaV2"></include>) */
		        rownum rn,
		        best_jokes_id,
		        joke_id, 
		        member_id, 
		        created_on, 
		        modified_on, 
		        joke_question, 
		        joke_answer, 
		        view_count,
		        reply_count,
		        like_count,
		        dislike_count
		    FROM <include refid="bestJokesTableName"></include> 
		    WHERE
		    <include refid="searchCriteria"></include>
		    <![CDATA[rownum <= #{pageNum} * #{amount}]]>
			)
		WHERE	rn > (#{pageNum}-1) * #{amount}
	</select>

	<select id="getTotalCnt" resultType="int">
		SELECT count(*)
		FROM joke
		WHERE joke_id > 0
	</select>

	<update id="updateViewCnt">
		UPDATE joke
		SET view_count = view_count + 1
		WHERE
		joke_id = #{joke_id}
	</update>

	<update id="updateReplyCnt">
		UPDATE joke
		SET reply_count = reply_count + #{amount}
		WHERE joke_id = #{joke_id}
	</update>

	<update id="updateLikeCnt">
		UPDATE joke
		SET like_count = like_count + #{amount}
		WHERE joke_id = #{joke_id}
	</update>

	<update id="updateDislikeCnt">
		UPDATE joke
		SET dislike_count = dislike_count + #{amount}
		WHERE joke_id = #{joke_id}
	</update>

</mapper>