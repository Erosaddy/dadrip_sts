<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="JokeMapper">


	<insert id="create" parameterType="kr.co.dadrip.domain.JokeDTO">
	    INSERT	INTO joke (joke_id, member_id, joke_question, joke_answer)
	    VALUES	(joke_seq.nextval, #{member_id}, #{joke_question}, #{joke_answer})
	    <selectKey keyProperty="joke_id" resultType="Integer" order="AFTER">
	        SELECT joke_seq.currval 
	        FROM   dual
	    </selectKey>
	</insert>

	<!-- <insert id="create">
		INSERT	INTO joke (joke_id, member_id, joke_question, joke_answer)
		VALUES	(joke_seq.nextval, #{member_id}, #{joke_question}, #{joke_answer})
	</insert> -->
	
	<select id="read" resultType="kr.co.dadrip.domain.JokeDTO">
		SELECT  joke_id, 
				member_id, 
				created_on, 
				modified_on, 
				joke_question, 
				joke_answer, 
				view_count,
				reply_count,
				like_count,
				dislike_count
		FROM    joke
		WHERE   joke_id = #{joke_id}
	</select>
	
	<!-- 오늘, 이번주, 이번달, 전체 베스트 글을 조회하는 동적 쿼리문 -->
	
	<sql id="bestJokesCriteria">
	    <choose>
	        <when test="timeScope == 'day'">
	            AND voted_on >= SYSDATE - 1
	        </when>
	        <when test="timeScope == 'week'">
	            AND voted_on >= SYSDATE - 7
	        </when>
	        <when test="timeScope == 'month'">
	            AND voted_on >= SYSDATE - 30
	        </when>
	        <otherwise>
	            <!-- 전체 데이터를 조회할 때는 시간 제약을 두지 않음 -->
	        </otherwise>
	    </choose>
	</sql>

	
	<select id="listBestJokes" resultType="kr.co.dadrip.domain.JokeDTO">
		<![CDATA[
		SELECT	joke_id, 
					member_id, 
					created_on, 
					modified_on, 
					joke_question, 
					joke_answer, 
					view_count,
					reply_count,
					like_count,
					dislike_count
			FROM	(
						SELECT /*+ INDEX_DESC(joke IDX_joke_jokeId_PK) */
							rownum rn,
							joke_id, 
							member_id, 
							created_on, 
							modified_on, 
							joke_question, 
							joke_answer, 
							view_count,
							reply_count,
							like_count,
							dislike_count
						FROM (
                                   SELECT j.JOKE_ID,
                                   j.MEMBER_ID,
                                   j.CREATED_ON,
                                   j.MODIFIED_ON,
                                   j.JOKE_QUESTION,
                                   j.JOKE_ANSWER,
                                   j.VIEW_COUNT,
                                   j.REPLY_COUNT,
                                   j.DISLIKE_COUNT,
                                   COALESCE(v.like_count, 0) AS LIKE_COUNT 
                            FROM joke j
                            LEFT JOIN (
                                SELECT JOKE_ID,
                                COUNT(*) AS like_count  
                                FROM vote
                                WHERE VOTE_TYPE = '1'
            ]]>                    
                                <include refid="bestJokesCriteria"></include>
            <![CDATA[                    
                                GROUP BY JOKE_ID
                            ) v ON j.JOKE_ID = v.JOKE_ID
                            ORDER BY v.like_count DESC NULLS LAST
                            )
						WHERE
			]]>			
                        <include refid="searchCriteria"></include>
            <![CDATA[            
			rownum <= #{pageNum} * #{amount}
					)
			WHERE	rn > (#{pageNum} - 1) * #{amount}
			]]>
	</select>

	
	<update id="update">
		UPDATE  joke
		SET     modified_on = sysdate, joke_question = #{joke_question}, joke_answer = #{joke_answer}
		WHERE   joke_id = #{joke_id}
	</update>
	
	<delete id="delete">
		DELETE
		FROM	joke
		WHERE	joke_id = #{joke_id}
	</delete>
	
	<sql id="searchCriteria">
	    <trim prefix="(" suffix=") AND " prefixOverrides="OR">
	        <foreach item="type" collection="typeArr">
	            <trim prefix="OR">
	                <choose>
	                    <when test="type == 'T'.toString()">
	                        joke_question LIKE '%'||#{keyword}||'%'
	                    </when>
	                    <when test="type == 'C'.toString()">
	                        joke_answer LIKE '%'||#{keyword}||'%'
	                    </when>
	                    <when test="type == 'W'.toString()">
	                        member_id LIKE '%'||#{keyword}||'%'
	                    </when>
	                </choose>
	            </trim>
	        </foreach>
	    </trim>
	</sql>
	
	<select id="listAllJokesWithPaging" resultType="kr.co.dadrip.domain.JokeDTO">
	<!-- 부등호를 문자로 인식하도록 해주는 CDATA -->
		<![CDATA[	
			SELECT	joke_id, 
					member_id, 
					created_on, 
					modified_on, 
					joke_question, 
					joke_answer, 
					view_count,
					reply_count,
					like_count,
					dislike_count
			FROM	(
						SELECT /*+ INDEX_DESC(joke IDX_joke_jokeId_PK) */
							rownum rn,
							joke_id, 
							member_id, 
							created_on, 
							modified_on, 
							joke_question, 
							joke_answer, 
							view_count,
							reply_count,
							like_count,
							dislike_count
						FROM joke
						WHERE 
		]]>
		
		<include refid="searchCriteria"></include>
		
		<![CDATA[
			rownum <= #{pageNum} * #{amount}
					)
			WHERE	rn > (#{pageNum}-1) * #{amount}
		]]>
		
		
	</select>
	
	<select id="getTotalCnt" resultType="int">
	    SELECT  count(*)
	    FROM    joke
	    WHERE   joke_id > 0
	</select>
	
	<update id="updateViewCnt">
	    UPDATE	joke
	    SET		view_count = view_count + 1
	    WHERE	joke_id = #{joke_id}
	</update>
	
	<update id="updateReplyCnt">
	    UPDATE	joke
	    SET		reply_count = reply_count + #{amount}
	    WHERE	joke_id = #{joke_id}
	</update>
	
	<update id="updateLikeCnt">
		UPDATE	joke
		SET		like_count = like_count + #{amount}
		WHERE	joke_id = #{joke_id}
	</update>
	
	<update id="updateDislikeCnt">
		UPDATE	joke
		SET		dislike_count = dislike_count + #{amount}
		WHERE	joke_id = #{joke_id}
	</update>
	
</mapper>